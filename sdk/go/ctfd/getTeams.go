// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ctfd

import (
	"context"
	"reflect"

	"github.com/ctfer-io/pulumi-ctfd/sdk/v2/go/ctfd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetTeams(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetTeamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTeamsResult
	err := ctx.Invoke("ctfd:index/getTeams:getTeams", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getTeams.
type GetTeamsResult struct {
	// The ID of this resource.
	Id    string         `pulumi:"id"`
	Teams []GetTeamsTeam `pulumi:"teams"`
}

func GetTeamsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetTeamsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetTeamsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("ctfd:index/getTeams:getTeams", nil, GetTeamsResultOutput{}, options).(GetTeamsResultOutput), nil
	}).(GetTeamsResultOutput)
}

// A collection of values returned by getTeams.
type GetTeamsResultOutput struct{ *pulumi.OutputState }

func (GetTeamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsResult)(nil)).Elem()
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutput() GetTeamsResultOutput {
	return o
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutputWithContext(ctx context.Context) GetTeamsResultOutput {
	return o
}

// The ID of this resource.
func (o GetTeamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTeamsResultOutput) Teams() GetTeamsTeamArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []GetTeamsTeam { return v.Teams }).(GetTeamsTeamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTeamsResultOutput{})
}
