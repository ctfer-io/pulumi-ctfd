// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ctfd

import (
	"context"
	"reflect"

	"github.com/ctfer-io/pulumi-ctfd/sdk/go/ctfd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetChallenges(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetChallengesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetChallengesResult
	err := ctx.Invoke("ctfd:index/getChallenges:getChallenges", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getChallenges.
type GetChallengesResult struct {
	Challenges []GetChallengesChallenge `pulumi:"challenges"`
	// The ID of this resource.
	Id string `pulumi:"id"`
}

func GetChallengesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetChallengesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetChallengesResult, error) {
		r, err := GetChallenges(ctx, opts...)
		var s GetChallengesResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetChallengesResultOutput)
}

// A collection of values returned by getChallenges.
type GetChallengesResultOutput struct{ *pulumi.OutputState }

func (GetChallengesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChallengesResult)(nil)).Elem()
}

func (o GetChallengesResultOutput) ToGetChallengesResultOutput() GetChallengesResultOutput {
	return o
}

func (o GetChallengesResultOutput) ToGetChallengesResultOutputWithContext(ctx context.Context) GetChallengesResultOutput {
	return o
}

func (o GetChallengesResultOutput) Challenges() GetChallengesChallengeArrayOutput {
	return o.ApplyT(func(v GetChallengesResult) []GetChallengesChallenge { return v.Challenges }).(GetChallengesChallengeArrayOutput)
}

// The ID of this resource.
func (o GetChallengesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChallengesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetChallengesResultOutput{})
}
