// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ctfd

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/ctfer-io/pulumi-ctfd/sdk/v2/go/ctfd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "ctfd:index/bracket:Bracket":
		r = &Bracket{}
	case "ctfd:index/challengeDynamic:ChallengeDynamic":
		r = &ChallengeDynamic{}
	case "ctfd:index/challengeStandard:ChallengeStandard":
		r = &ChallengeStandard{}
	case "ctfd:index/file:File":
		r = &File{}
	case "ctfd:index/flag:Flag":
		r = &Flag{}
	case "ctfd:index/hint:Hint":
		r = &Hint{}
	case "ctfd:index/solution:Solution":
		r = &Solution{}
	case "ctfd:index/team:Team":
		r = &Team{}
	case "ctfd:index/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:ctfd" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/bracket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/challengeDynamic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/challengeStandard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/file",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/flag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/hint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/solution",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/team",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ctfd",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"ctfd",
		&pkg{version},
	)
}
