// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Ctfd
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("ctfd");

        private static readonly __Value<string?> _apiKey = new __Value<string?>(() => __config.Get("apiKey"));
        /// <summary>
        /// User API key. Could use `CTFD_API_KEY` environment variable instead. Despite being the most convenient way to
        /// authenticate yourself, we do not recommend it as you will probably generate a long-live token without any rotation
        /// policy.
        /// </summary>
        public static string? ApiKey
        {
            get => _apiKey.Get();
            set => _apiKey.Set(value);
        }

        private static readonly __Value<string?> _nonce = new __Value<string?>(() => __config.Get("nonce"));
        /// <summary>
        /// User session nonce, comes with session. Could use `CTFD_NONCE` environment variable instead.
        /// </summary>
        public static string? Nonce
        {
            get => _nonce.Get();
            set => _nonce.Set(value);
        }

        private static readonly __Value<string?> _session = new __Value<string?>(() => __config.Get("session"));
        /// <summary>
        /// User session token, comes with nonce. Could use `CTFD_SESSION` environment variable instead.
        /// </summary>
        public static string? Session
        {
            get => _session.Get();
            set => _session.Set(value);
        }

        private static readonly __Value<string?> _url = new __Value<string?>(() => __config.Get("url"));
        /// <summary>
        /// CTFd base URL (e.g. `https://my-ctf.lan`). Could use `CTFD_URL` environment variable instead.
        /// </summary>
        public static string? Url
        {
            get => _url.Get();
            set => _url.Set(value);
        }

    }
}
