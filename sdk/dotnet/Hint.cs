// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CTFerio.Ctfd
{
    /// <summary>
    /// A hint for a challenge to help players solve it.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ctfd = CTFerio.Ctfd;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var http = new Ctfd.ChallengeDynamic("http", new()
    ///     {
    ///         Category = "misc",
    ///         Description = "...",
    ///         Value = 500,
    ///         Decay = 100,
    ///         Minimum = 50,
    ///         State = "visible",
    ///         Function = "logarithmic",
    ///         Topics = new[]
    ///         {
    ///             "Misc",
    ///         },
    ///         Tags = new[]
    ///         {
    ///             "misc",
    ///             "basic",
    ///         },
    ///     });
    /// 
    ///     var httpFlag = new Ctfd.Flag("httpFlag", new()
    ///     {
    ///         ChallengeId = http.Id,
    ///         Content = "CTF{some_flag}",
    ///     });
    /// 
    ///     var httpHint = new Ctfd.Hint("httpHint", new()
    ///     {
    ///         ChallengeId = http.Id,
    ///         Content = "Some super-helpful hint",
    ///         Cost = 50,
    ///     });
    /// 
    ///     var httpHint2 = new Ctfd.Hint("httpHint2", new()
    ///     {
    ///         ChallengeId = http.Id,
    ///         Content = "Even more helpful hint !",
    ///         Cost = 50,
    ///         Requirements = new[]
    ///         {
    ///             ctfd_hint.Http_hint_1.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CtfdResourceType("ctfd:index/hint:Hint")]
    public partial class Hint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Challenge of the hint.
        /// </summary>
        [Output("challengeId")]
        public Output<string> ChallengeId { get; private set; } = null!;

        /// <summary>
        /// Content of the hint as displayed to the end-user.
        /// </summary>
        [Output("content")]
        public Output<string> Content { get; private set; } = null!;

        /// <summary>
        /// Cost of the hint, and if any specified, the end-user will consume its own (or team) points to get it.
        /// </summary>
        [Output("cost")]
        public Output<int> Cost { get; private set; } = null!;

        /// <summary>
        /// List of the other hints it depends on.
        /// </summary>
        [Output("requirements")]
        public Output<ImmutableArray<string>> Requirements { get; private set; } = null!;


        /// <summary>
        /// Create a Hint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Hint(string name, HintArgs args, CustomResourceOptions? options = null)
            : base("ctfd:index/hint:Hint", name, args ?? new HintArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Hint(string name, Input<string> id, HintState? state = null, CustomResourceOptions? options = null)
            : base("ctfd:index/hint:Hint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ctfer-io/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Hint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Hint Get(string name, Input<string> id, HintState? state = null, CustomResourceOptions? options = null)
        {
            return new Hint(name, id, state, options);
        }
    }

    public sealed class HintArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Challenge of the hint.
        /// </summary>
        [Input("challengeId", required: true)]
        public Input<string> ChallengeId { get; set; } = null!;

        /// <summary>
        /// Content of the hint as displayed to the end-user.
        /// </summary>
        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        /// <summary>
        /// Cost of the hint, and if any specified, the end-user will consume its own (or team) points to get it.
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        [Input("requirements")]
        private InputList<string>? _requirements;

        /// <summary>
        /// List of the other hints it depends on.
        /// </summary>
        public InputList<string> Requirements
        {
            get => _requirements ?? (_requirements = new InputList<string>());
            set => _requirements = value;
        }

        public HintArgs()
        {
        }
        public static new HintArgs Empty => new HintArgs();
    }

    public sealed class HintState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Challenge of the hint.
        /// </summary>
        [Input("challengeId")]
        public Input<string>? ChallengeId { get; set; }

        /// <summary>
        /// Content of the hint as displayed to the end-user.
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// Cost of the hint, and if any specified, the end-user will consume its own (or team) points to get it.
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        [Input("requirements")]
        private InputList<string>? _requirements;

        /// <summary>
        /// List of the other hints it depends on.
        /// </summary>
        public InputList<string> Requirements
        {
            get => _requirements ?? (_requirements = new InputList<string>());
            set => _requirements = value;
        }

        public HintState()
        {
        }
        public static new HintState Empty => new HintState();
    }
}
