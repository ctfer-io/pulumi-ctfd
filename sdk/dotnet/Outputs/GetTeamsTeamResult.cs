// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CTFerio.Ctfd.Outputs
{

    [OutputType]
    public sealed class GetTeamsTeamResult
    {
        /// <summary>
        /// Affiliation to a company or agency.
        /// </summary>
        public readonly string Affiliation;
        /// <summary>
        /// Is true if the team is banned from the CTF.
        /// </summary>
        public readonly bool Banned;
        /// <summary>
        /// Member who is captain of the team. Must be part of the members too. Note it could cause a fatal error in case of resource import with an inconsistent CTFd configuration i.e. if a team has no captain yet (should not be possible).
        /// </summary>
        public readonly string Captain;
        /// <summary>
        /// Country the team represent or is hail from.
        /// </summary>
        public readonly string Country;
        /// <summary>
        /// Email of the team.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// Is true if the team is hidden to the participants.
        /// </summary>
        public readonly bool Hidden;
        /// <summary>
        /// Identifier of the user.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of members (User), defined by their IDs.
        /// </summary>
        public readonly ImmutableArray<string> Members;
        /// <summary>
        /// Name of the team.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Password of the team. Notice that during a CTF you may not want to update those to avoid defaulting team accesses.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Website, blog, or anything similar (displayed to other participants).
        /// </summary>
        public readonly string Website;

        [OutputConstructor]
        private GetTeamsTeamResult(
            string affiliation,

            bool banned,

            string captain,

            string country,

            string email,

            bool hidden,

            string id,

            ImmutableArray<string> members,

            string name,

            string password,

            string website)
        {
            Affiliation = affiliation;
            Banned = banned;
            Captain = captain;
            Country = country;
            Email = email;
            Hidden = hidden;
            Id = id;
            Members = members;
            Name = name;
            Password = password;
            Website = website;
        }
    }
}
