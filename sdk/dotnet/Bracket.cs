// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CTFerio.Ctfd
{
    /// <summary>
    /// A bracket for users or teams to compete in parallel.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ctfd = CTFerio.Ctfd;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var juniors = new Ctfd.Bracket("juniors", new()
    ///     {
    ///         Description = "Bracket for 14-25 years old players.",
    ///         Type = "users",
    ///     });
    /// 
    ///     var player1 = new Ctfd.User("player1", new()
    ///     {
    ///         Email = "player1@ctfer.io",
    ///         Password = "password",
    ///         BracketId = juniors.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CtfdResourceType("ctfd:index/bracket:Bracket")]
    public partial class Bracket : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description that explains the goal of this bracket.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name displayed to end-users (e.g. "Students", "Interns", "Engineers").
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Type of the bracket, either "users" or "teams".
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Bracket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Bracket(string name, BracketArgs? args = null, CustomResourceOptions? options = null)
            : base("ctfd:index/bracket:Bracket", name, args ?? new BracketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Bracket(string name, Input<string> id, BracketState? state = null, CustomResourceOptions? options = null)
            : base("ctfd:index/bracket:Bracket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ctfer-io/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Bracket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Bracket Get(string name, Input<string> id, BracketState? state = null, CustomResourceOptions? options = null)
        {
            return new Bracket(name, id, state, options);
        }
    }

    public sealed class BracketArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description that explains the goal of this bracket.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name displayed to end-users (e.g. "Students", "Interns", "Engineers").
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the bracket, either "users" or "teams".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public BracketArgs()
        {
        }
        public static new BracketArgs Empty => new BracketArgs();
    }

    public sealed class BracketState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description that explains the goal of this bracket.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name displayed to end-users (e.g. "Students", "Interns", "Engineers").
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the bracket, either "users" or "teams".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public BracketState()
        {
        }
        public static new BracketState Empty => new BracketState();
    }
}
