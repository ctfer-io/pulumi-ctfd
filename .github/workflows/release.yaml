name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  publish_provider:
    runs-on: ubuntu-latest
    name: Publish Provider
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write  # for goreleaser/goreleaser-action to create a GitHub release
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'provider/go.mod'

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@1ca97d9028b51809cf6d3c934c3e160716e1b605 # v0.17.5

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4 # v1.12.0
        with:
          repo: pulumi/pulumictl

      - name: Set PreRelease Version
        run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV

      - name: Run GoReleaser
        id: run-goreleaser
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
        with:
          args: -p 3 release --clean --timeout 60m0s
          version: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail

          checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
          echo "hashes=$(cat $checksum_file | base64 -w0)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [publish_provider]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0 # not pinned to avoid breaking it, use it to target refs/tags/vX.Y.Z
    with:
      base64-subjects: "${{ needs.publish_provider.outputs.hashes }}"
      upload-assets: true # upload to a new release

  publish_sdk:
    runs-on: ubuntu-latest
    name: Publish SDK
    permissions:
      id-token: write
      contents: read
    needs: [publish_provider]
    strategy:
      max-parallel: 10
      matrix:
        node-version: [18.x]
        dotnet-version: [3.1.301]
        python-version: [3.9]
        language:
          - go
          - nodejs
          - python
          - dotnet
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'provider/go.mod'
          cache: true

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4 # v1.12.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/actions@c7fad9e2f0b79653172b36538b8b34b3c0291952 # v6.0.0

      - name: Setup DotNet
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
        with:
          dotnet-version: "${{ matrix.dotnet-version }}"
        if: matrix.language == 'dotnet'
      - name: Setup Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: "${{ matrix.python-version }}"
        if: matrix.language == 'python'
      - name: Use Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: "${{ matrix.node-version }}"
        if: matrix.language == 'nodejs'

      - name: Install Plugins
        run: make install_plugins
      - name: Update Path
        run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Build SDK
        run: make build_${{ matrix.language }}

      - name: Publish .NET SDK
        run: |
          dotnet nuget push -s "${{ env.NUGET_FEED_URL }}" -k "${{ secrets.NUGET_PUBLISH_KEY }}" ${{github.workspace}}/sdk/dotnet/bin/Debug/*.nupkg
        env:
          NUGET_PUBLISH_KEY: ${{ secrets.NUGET_TOKEN }}
          NUGET_FEED_URL: https://api.nuget.org/v3/index.json
        if: matrix.language == 'dotnet'

      - name: Publish Python SDK
        uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 #Â v1.10.3
        with:
          skip-existing: true
          packages-dir: "${{ github.workspace }}/sdk/python/bin/dist/"
        if: matrix.language == 'python'

      - name: Publish NodeJS SDK
        uses: JS-DevTools/npm-publish@19c28f1ef146469e409470805ea4279d47c3d35c # v3.1.1
        with:
          package: ./sdk/nodejs/bin/package.json
          access: public
          token: ${{ secrets.NPM_TOKEN }}
          provenance: true
        if: matrix.language == 'nodejs'

  tag_sdk:
    runs-on: ubuntu-latest
    name: Tag SDK Release
    permissions:
      id-token: write
      contents: write
    needs:
      - publish_sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: Setup Git
        run: |
          git config --local user.email "ctfer-io@protonmail.com"
          git config --local user.name "ctfer-io[bot]"

      - name: Get Tag Name
        run: |
          REF_NAME=`git describe --abbrev=0 --tags`
          echo "REF_NAME=${REF_NAME}" >> $GITHUB_ENV

      - name: Tag SDK Version
        run: |
          git tag -a sdk/${{ env.REF_NAME }} -m sdk/${{ env.REF_NAME }}
      - name: Push to Repository
        run: |
          git push origin sdk/${{ env.REF_NAME }}
